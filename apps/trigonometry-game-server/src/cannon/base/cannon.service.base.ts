/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Cannon as PrismaCannon } from "@prisma/client";

export class CannonServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.CannonCountArgs, "select">): Promise<number> {
    return this.prisma.cannon.count(args);
  }

  async cannons(args: Prisma.CannonFindManyArgs): Promise<PrismaCannon[]> {
    return this.prisma.cannon.findMany(args);
  }
  async cannon(
    args: Prisma.CannonFindUniqueArgs
  ): Promise<PrismaCannon | null> {
    return this.prisma.cannon.findUnique(args);
  }
  async createCannon(args: Prisma.CannonCreateArgs): Promise<PrismaCannon> {
    return this.prisma.cannon.create(args);
  }
  async updateCannon(args: Prisma.CannonUpdateArgs): Promise<PrismaCannon> {
    return this.prisma.cannon.update(args);
  }
  async deleteCannon(args: Prisma.CannonDeleteArgs): Promise<PrismaCannon> {
    return this.prisma.cannon.delete(args);
  }
}
