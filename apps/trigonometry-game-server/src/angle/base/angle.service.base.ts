/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Angle as PrismaAngle } from "@prisma/client";

export class AngleServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.AngleCountArgs, "select">): Promise<number> {
    return this.prisma.angle.count(args);
  }

  async angles(args: Prisma.AngleFindManyArgs): Promise<PrismaAngle[]> {
    return this.prisma.angle.findMany(args);
  }
  async angle(args: Prisma.AngleFindUniqueArgs): Promise<PrismaAngle | null> {
    return this.prisma.angle.findUnique(args);
  }
  async createAngle(args: Prisma.AngleCreateArgs): Promise<PrismaAngle> {
    return this.prisma.angle.create(args);
  }
  async updateAngle(args: Prisma.AngleUpdateArgs): Promise<PrismaAngle> {
    return this.prisma.angle.update(args);
  }
  async deleteAngle(args: Prisma.AngleDeleteArgs): Promise<PrismaAngle> {
    return this.prisma.angle.delete(args);
  }
}
